{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "https://drive.google.com/file/d/1W1yav8cnhxLaHRAaIb9RQnm1crBtg8YQ/view?usp=sharing",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -128,
        688
      ],
      "id": "7415d324-4bc8-4aba-9868-723bef4047ad",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "eP8XfI5FCerDY9nH",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        80,
        688
      ],
      "id": "7fbcb6ba-87c6-4779-8141-382a828e9313",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "jsCode": "let url = \"https://www.linkedin.com/jobs/search/?f_TPR=r86400\"\n\nconst keyword = $input.first().json.Keyword\nconst location = $input.first().json.Location\nconst experienceLevel = $input.first().json['Experience Level'] || \"\"\nconst remote = $input.first().json.Remote || \"\"\nconst easyApply = $input.first().json['Easy Apply']\n\nif (keyword != \"\") {\n  url += `&keywords=${keyword}`;\n}\n\nif (location != \"\") {\n  url += `&location=${location}`;\n}\n\nif (experienceLevel !== \"\") {\n  // Transform experience levels to LinkedIn codes\n  // Internship -> 1, Entry level -> 2, Associate -> 3\n  // Mid-Senior level -> 4, Director -> 5, Executive -> 6\n  const transformedExperiences = experienceLevel\n    .split(\",\")\n    .map((exp) => {\n      switch (exp.trim()) {\n        case \"Internship\": return \"1\";\n        case \"Entry level\": return \"2\";\n        case \"New Grad\": return \"3\";\n        default: return \"\";\n      }\n    })\n    .filter(Boolean);\n  url += `&f_E=${transformedExperiences.join(\",\")}`;\n}\n\nif (remote.length != \"\") {\n  // Transform remote options to LinkedIn codes\n  // On-Site -> 1, Remote -> 2, Hybrid -> 3\n  const transformedRemote = remote\n    .split(\",\")\n    .map((e) => {\n      switch (e.trim()) {\n        case \"Remote\": return \"2\";\n        case \"Hybrid\": return \"3\";\n        case \"On-Site\": return \"1\";\n        default: return \"\";\n      }\n    })\n    .filter(Boolean);\n  url += `&f_WT=${transformedRemote.join(\",\")}`;\n}\n\nif (easyApply != \"\") {\n  url += \"&f_EA=true\";\n}\n\nreturn {url}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        496,
        688
      ],
      "id": "e19ffcbe-51a9-4be4-84d7-58c5696c604f",
      "name": "LinkedIn Search URL"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        704,
        688
      ],
      "id": "9c3101f6-0eed-41ba-9044-4309e3d8ade1",
      "name": "Fetch jobs from LinkedIn"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "jobs",
              "cssSelector": "ul.jobs-search__results-list li div a[class*=\"base-card\"]",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        912,
        688
      ],
      "id": "2d12f9bd-d325-40c6-87e0-f01a25444a58",
      "name": "HTML"
    },
    {
      "parameters": {
        "fieldToSplitOut": "jobs",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1120,
        688
      ],
      "id": "14caea44-aa0e-4455-bf66-319d69fb40ec",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1232,
        1504
      ],
      "id": "20ec56d9-8056-4026-8327-4a9b4f6b9660",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -368,
        896
      ],
      "id": "dbc3dba4-06e5-4558-9aba-ccc2a0c5b16d",
      "name": "Wait",
      "webhookId": "12409f66-fbe7-48bd-b9d7-68449f197264"
    },
    {
      "parameters": {
        "url": "={{ $json.jobs }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -160,
        896
      ],
      "id": "c2e0514c-bee9-4a26-856a-0501f3a144f2",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "Title",
              "cssSelector": "div h1"
            },
            {
              "key": "Company",
              "cssSelector": "div span a"
            },
            {
              "key": "Location",
              "cssSelector": "div span[class*='topcard__flavor topcard__flavor--bullet']"
            },
            {
              "key": "Description",
              "cssSelector": "div.description__text.description__text--rich"
            },
            {
              "key": "Job ID",
              "cssSelector": "a[data-item-type='semaphore']",
              "returnValue": "attribute",
              "attribute": "data-semaphore-content-urn"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        48,
        896
      ],
      "id": "22a556e0-b652-4790-94f1-14a3a1c91ce0",
      "name": "HTML1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "240418dc-3349-48d5-ba59-3aa590d71950",
              "name": "Description",
              "value": "={{ $json.Description.replaceAll(/\\s+/g, \" \")}}",
              "type": "string"
            },
            {
              "id": "7b24938f-8b47-488d-9f65-54d036dcffd5",
              "name": "Job ID",
              "value": "={{ $json['Job ID'].split(\":\").last() }}",
              "type": "string"
            },
            {
              "id": "d6addada-9e01-464f-a768-c19f6224c491",
              "name": "Apply Link",
              "value": "={{ \"https://www.linkedin.com/jobs/view/\"+ $json['Job ID'].split(\":\").last()  }}",
              "type": "string"
            },
            {
              "id": "21c89d3a-c8b6-44eb-9719-9ae5716a7c76",
              "name": "Title",
              "value": "={{ $json.Title }}",
              "type": "string"
            },
            {
              "id": "da713845-9a81-486e-bff2-1613105e424d",
              "name": "Company",
              "value": "={{ $json.Company }}",
              "type": "string"
            },
            {
              "id": "1a9a31dd-8d51-4f35-b6b6-ca8a348de5d7",
              "name": "Location",
              "value": "={{ $json.Location }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        256,
        896
      ],
      "id": "a182fd03-9f1c-428c-bca7-be459015fc39",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a precise job-matching assistant.\n\nReturn ONE JSON object wrapped in ```json fences, followed by the line END_OF_JSON.\nNo extra prose. No Markdown inside the JSON. No comments.\n\nINPUTS\njob_description: {{ $json.Description }}\nmy_resume: {{ $('Extract from File').item.json.text }}\n\nTASKS\n1) Parse job_description → job_analysis with keys:\n   title (string), company (string), must_have_skills (string[]), nice_to_have_skills (string[]),\n   responsibilities (string[]), years_of_experience (string), education_certifications (string),\n   location_constraints (string), domain_industry_focus (string), tech_stack (string[]), measurable_kpis (string[])\n\n2) Parse my_resume → resume_analysis:\n   core_skills (string[]),\n   tools_tech { programming_languages[], frontend_technologies[], backend_technologies[], databases_devops[] },\n   years_of_experience_key_areas (object of short strings),\n   accomplishments_with_metrics (string[]),\n   education_certs (string[]), domains (string[]), roles_titles (string[]),\n   leadership_collaboration (string[]), location_work_auth (string)\n\n3) Scoring (integer 0–100):\n   - Skills/Tools overlap: 40\n   - Relevant experience & seniority: 25\n   - Responsibilities alignment: 15\n   - Education/Certs fit: 10\n   - Domain/industry fit: 5\n   - Logistics (location/work auth/availability): 5\n   Allow partial credit; deduct up to 10 via red_flags. Clamp to [0,100], integer.\n\n4) Explain the score:\n   For each bucket, provide 1–3 concise evidence bullets. Cite \"JD\" or \"Resume\" and include short quoted fragments (escape quotes).\n\n5) Gaps & Suggestions:\n   List missing/weak requirements with 1–2 concrete upskilling steps per gap.\n\n6) Cover letter:\n   150–220 words (2–4 short paragraphs), tailored to the role/company.\n   Concrete impacts; no greeting/signature. JSON-safe: escape all \" as \\\", use \\n for newlines.\n\nSTRICT CONTENT RULES (to prevent invalid JSON)\n- Do NOT paste raw paragraphs, markdown (**bold**, lists), headings, or multi-line blocks into any array fields.\n- Every array element must be a short phrase (≤ 140 characters), single line, no line breaks, no asterisks, no bullets.\n- If a JD section is long, summarize into short phrases before placing into arrays.\n- Do NOT include unrelated job text inside arrays or objects. Keep each value semantically atomic.\n- Never invent company/title; use \"\" if unknown.\n- No trailing commas anywhere.\n\nSTRICT OUTPUT RULES\n- Output exactly the following schema (keys and types). No extra keys.\n\nSCHEMA\n```json\n{\n  \"job_analysis\": {\n    \"title\": \"\",\n    \"company\": \"\",\n    \"must_have_skills\": [],\n    \"nice_to_have_skills\": [],\n    \"responsibilities\": [],\n    \"years_of_experience\": \"\",\n    \"education_certifications\": \"\",\n    \"location_constraints\": \"\",\n    \"domain_industry_focus\": \"\",\n    \"tech_stack\": [],\n    \"measurable_kpis\": []\n  },\n  \"resume_analysis\": {\n    \"core_skills\": [],\n    \"tools_tech\": {\n      \"programming_languages\": [],\n      \"frontend_technologies\": [],\n      \"backend_technologies\": [],\n      \"databases_devops\": []\n    },\n    \"years_of_experience_key_areas\": {},\n    \"accomplishments_with_metrics\": [],\n    \"education_certs\": [],\n    \"domains\": [],\n    \"roles_titles\": [],\n    \"leadership_collaboration\": [],\n    \"location_work_auth\": \"\"\n  },\n  \"match_score\": 0,\n  \"score_explanation\": [\n    { \"category\": \"Skills/Tools overlap (40 points)\", \"score\": 0, \"evidence\": [] },\n    { \"category\": \"Relevant experience depth & seniority (25 points)\", \"score\": 0, \"evidence\": [] },\n    { \"category\": \"Responsibilities alignment (15 points)\", \"score\": 0, \"evidence\": [] },\n    { \"category\": \"Education/Certs fit (10 points)\", \"score\": 0, \"evidence\": [] },\n    { \"category\": \"Domain/industry fit (5 points)\", \"score\": 0, \"evidence\": [] },\n    { \"category\": \"Logistics (location, work auth, availability) (5 points)\", \"score\": 0, \"evidence\": [] }\n  ],\n  \"red_flags\": [],\n  \"gaps_and_suggestions\": [\n    { \"gap\": \"\", \"suggestion\": \"\" }\n  ],\n  \"cover_letter\": \"\"\n}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -304,
        1152
      ],
      "id": "36a0f894-787d-42f5-8767-07429effe87e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -304,
        1328
      ],
      "id": "5ecfc1e4-7230-4baa-9e8e-d9fcc617c8f9",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "FOeJ4S4qtM8Ny7rM",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ (() => {\n  // 0) Read model output from AI Agent node\n  const raw = String(($('AI Agent').item.json.output ?? ''));\n\n  // 1) Strip code fences\n  let s = raw\n    .replace(/`{2,3}(?:json)?\\s*/gi, '')\n    .replace(/\\s*`{3}\\s*$/gi, '');\n\n  // 1b) Normalize curly quotes (Gemini sometimes emits them)\n  s = s.replace(/[\\u201C\\u201D]/g, '\"').replace(/\\u2019/g, \"'\");\n\n  // 2) Cut at END_OF_JSON if present\n  const endIdx = s.indexOf('END_OF_JSON');\n  if (endIdx !== -1) s = s.slice(0, endIdx);\n\n  // 3) Extract first complete { ... } by brace counting\n  const start = s.indexOf('{');\n  if (start < 0) return {};\n  let depth = 0, inStr = false, esc = false, end = -1;\n  for (let i = start; i < s.length; i++) {\n    const ch = s[i];\n    if (inStr) {\n      if (esc) { esc = false; }\n      else if (ch === '\\\\') { esc = true; }\n      else if (ch === '\"') { inStr = false; }\n    } else {\n      if (ch === '\"') inStr = true;\n      else if (ch === '{') depth++;\n      else if (ch === '}') { depth--; if (depth === 0) { end = i + 1; break; } }\n    }\n  }\n  if (end < 0) return {};\n\n  const cleaned = s.slice(start, end).trim();\n\n  try {\n    return JSON.parse(cleaned);   // JSON mode expects an OBJECT\n  } catch (e) {\n    // As a last resort, return an empty object to keep the run alive\n    return {};\n  }\n})() }}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        96,
        1344
      ],
      "id": "4c6411bb-197a-4e75-84b5-8f46b793c5a1",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "You are a ruthless resume editor. Compare the inputs and output ONLY crisp, point-wise changes to improve job fit.\n\nInputs:\n- job_description: {{ $json.Description }}\n- my_resume: {{ $('Extract from File').item.json.text }}\n\nInstructions:\n- Output a numbered list; highest-impact first.\n- One line per point; <= 14 words.\n- Start each line with a tag: [ADD], [REMOVE], [REWRITE], [ORDER], [QUANTIFY], [KEYWORDS], [FORMAT], [FOCUS].\n- Base every point on gaps vs. the job_description; do not invent experience.\n- Prefer concrete actions: skills to add, bullets to rewrite, sections to reorder/remove.\n- Include one line: 'Missing keywords: term1, term2, ...' (only if any).\n- No intros, explanations, code fences, or extra text - points only.\n\nOutput: points only, exactly as specified above.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        400,
        1344
      ],
      "id": "24d27b23-a4ad-4a32-bb16-c0bdbfe06403",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        400,
        1504
      ],
      "id": "d2b7f0f2-dc27-4774-87ff-f929c39de388",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "FOeJ4S4qtM8Ny7rM",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1jWnW8QyfSuCpkuuFNIiKpxzlRBKsNr9uB5daMv_lkG0/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 11035642,
          "mode": "list",
          "cachedResultName": "Result",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1m_p1yu6j10cuHK-bImqz86Oraegz5j9ii2u5LJqxg1g/edit#gid=11035642"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Link": "={{ $('Edit Fields').item.json['Apply Link'] }}",
            "Title": "={{ $('Edit Fields').item.json.Title }}",
            "Company ": "={{ $('Edit Fields').item.json.Company }}",
            "Locaton": "={{ $('Edit Fields').item.json.Location }}",
            "Cover Letter": "={{ $('Edit Fields1').item.json.cover_letter }}",
            "Score": "={{ $('Edit Fields1').item.json.match_score }}",
            "Skills": "={{ $('Edit Fields1').item.json.resume_analysis.core_skills }}",
            "Improvements": "={{ $json.output }}"
          },
          "matchingColumns": [
            "Link"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Company ",
              "displayName": "Company ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Locaton",
              "displayName": "Locaton",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cover Letter",
              "displayName": "Cover Letter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Skills",
              "displayName": "Skills",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Improvements",
              "displayName": "Improvements",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        736,
        1344
      ],
      "id": "c9c82325-c51b-4126-a696-e33f4eec514d",
      "name": "Append or update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XigElfAPMaqGgziw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "punya.anand01@gmail.com",
        "subject": "Job search results",
        "emailType": "text",
        "message": "Hey, your job search results with resume changes are ready in your sheet for today",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1648,
        1488
      ],
      "id": "6c51c8f0-be8c-420c-ad5b-a9cb3ec58e32",
      "name": "Send a message",
      "webhookId": "f0d6158b-a72b-4e84-8f3e-0e8ecfaeda72",
      "credentials": {
        "gmailOAuth2": {
          "id": "Wx5Ctv6aubm2sNl7",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Add Google Cloud Credentials\n\n1. sign in with google\n2. Upload your resume and change to anyone can view\n3. Paste your link\n",
        "height": 192,
        "width": 384
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -368,
        448
      ],
      "typeVersion": 1,
      "id": "680b42c6-06c6-4144-94a9-3bcd03e89212",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Add Google Cloud Credentials\n\n1. sign in with google\n2. Prepare your sheet filter\n3. Add your sheet Link",
        "height": 192,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        448
      ],
      "typeVersion": 1,
      "id": "ad619e3d-497d-403f-80ec-0d922b9f3dd2",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Add Google Cloud Credentials\n\n- sign in with google\n- Enter your e-mail address"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1568,
        1280
      ],
      "typeVersion": 1,
      "id": "90407a7c-8724-4b4b-8ff7-2e57b4fea052",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Add Google Cloud Credentials\n\n1. sign in with google\n2. Select your sheet and sub sheet",
        "height": 176
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        672,
        1136
      ],
      "typeVersion": 1,
      "id": "98d8ea28-9481-465f-a6e1-d2b19d6c0da6",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Add Gemini Free tier api key\n\n1. sign in with google\n2. Create API key and project\n3. Add Free Tier key",
        "height": 176
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -352,
        1472
      ],
      "typeVersion": 1,
      "id": "f50b4e7e-df0d-4f21-ab16-bff17de544e0",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Add Gemini Free tier api key\n\n1. sign in with google\n2. Create API key and project\n3. Add Free Tier key",
        "height": 176
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        304,
        1152
      ],
      "typeVersion": 1,
      "id": "b191b8a5-a740-46a3-b048-49edbbb34b70",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -384,
        688
      ],
      "id": "a8fa15e1-7feb-4b6d-b07d-9ba3ac2e5d55",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "content": "# Job search ultimate workflow - @Punya\n\n1. Takes about 1 hour to run\n2. Finds all relevant jobs posted in last one day, runs at 5 AM everyday\n3. Sends you an e-mail when completed",
        "height": 304,
        "width": 624
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        80
      ],
      "typeVersion": 1,
      "id": "04844cd1-2e1a-4e85-aa9f-69bda7659f79",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1jWnW8QyfSuCpkuuFNIiKpxzlRBKsNr9uB5daMv_lkG0/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Filter",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jWnW8QyfSuCpkuuFNIiKpxzlRBKsNr9uB5daMv_lkG0/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        288,
        688
      ],
      "id": "2f40bd9d-6ea2-4f58-82e4-f688e7cdaeda",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XigElfAPMaqGgziw",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Search URL": {
      "main": [
        [
          {
            "node": "Fetch jobs from LinkedIn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch jobs from LinkedIn": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Append or update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "LinkedIn Search URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": -1,
    "availableInMCP": false
  },
  "versionId": "2c1f71ac-6b8c-471f-8f17-3d0d038a59be",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "19700bf6632445d1ee20ada7654e249153f96c185385fdd59eea86756593a7eb"
  },
  "id": "DrwK5ivjMhPeA3Df",
  "tags": []
}